services:
  frontend:
    build:
      context: ./tic-tac-toe-frontend/
      args:
        - VITE_API_URL=${VITE_API_URL}
    container_name: tic-tac-toe_frontend_prod
    environment:
      VITE_API_URL: ${VITE_API_URL}
    working_dir: /app
    ports:
      - 127.0.0.1:80:80
  backend:
    container_name: tic-tac-toe_backend_prod
    build: ./tic-tac-toe-backend
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
    ports:
      - 127.0.0.1:8080:8080
    working_dir: /app
    networks:
      - backend
  database:
    image: postgres:latest
    container_name: tic-tac-toe_db_prod
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data-dev:/var/lib/postgresql/data
    networks:
      - backend
  pgadmin:
    image: dpage/pgadmin4
    container_name: tic-tac-toe_admin_prod
    restart: always
    ports:
      - "127.0.0.1:9999:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - backend
networks:
  backend:
    driver: bridge
volumes:
  postgres-data-dev:
  pgadmin-data:
